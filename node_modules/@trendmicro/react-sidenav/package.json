{
  "_from": "@trendmicro/react-sidenav",
  "_id": "@trendmicro/react-sidenav@0.4.5",
  "_inBundle": false,
  "_integrity": "sha512-smCo/Kdb9VI0Sylk96UhFB0mFKmcUo3oioeNrXy2KZVszO8/eVanNFj06Nw4D8vG+EMJSqnsdUTZ1+Lb0pn5jg==",
  "_location": "/@trendmicro/react-sidenav",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "@trendmicro%2freact-sidenav",
    "fetchSpec": "latest",
    "name": "@trendmicro/react-sidenav",
    "raw": "@trendmicro/react-sidenav",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "scope": "@trendmicro",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/@trendmicro/react-sidenav/-/react-sidenav-0.4.5.tgz",
  "_shasum": "a642af5c4dbfde259ce6b2ad9d884fed337a20c4",
  "_shrinkwrap": null,
  "_spec": "@trendmicro/react-sidenav",
  "_where": "/home/alext/pessoal/orcamento-react",
  "author": {
    "email": "cheton_wu@trend.com.tw",
    "name": "Cheton Wu"
  },
  "bugs": {
    "url": "https://github.com/trendmicro-frontend/react-sidenav/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "Cheton Wu",
      "email": "cheton_wu@trend.com.tw",
      "url": "https://github.com/trendmicro-frontend"
    }
  ],
  "dependencies": {
    "chained-function": "^0.5.0",
    "classnames": "^2.2.5",
    "prop-types": "^15.6.0",
    "uncontrollable": "^4.1.0",
    "warning": "^3.0.0"
  },
  "deprecated": false,
  "description": "React SideNav",
  "devDependencies": {
    "@trendmicro/react-breadcrumbs": "~0.5.5",
    "@trendmicro/react-buttons": "~1.2.1",
    "@trendmicro/react-dropdown": "~1.2.3",
    "babel-cli": "~6.26.0",
    "babel-core": "~6.26.0",
    "babel-eslint": "~8.0.3",
    "babel-loader": "~7.1.2",
    "babel-plugin-transform-decorators-legacy": "~1.3.4",
    "babel-preset-env": "~1.6.1",
    "babel-preset-react": "~6.24.1",
    "babel-preset-stage-0": "~6.24.1",
    "clean-css": "~4.1.9",
    "clean-css-cli": "~4.1.10",
    "coveralls": "~3.0.0",
    "css-loader": "~0.28.7",
    "ensure-array": "~1.0.0",
    "enzyme": "~3.2.0",
    "enzyme-adapter-react-16": "~1.1.1",
    "eslint": "~4.13.1",
    "eslint-config-trendmicro": "~1.2.0",
    "eslint-loader": "~1.9.0",
    "eslint-plugin-import": "~2.8.0",
    "eslint-plugin-jsx-a11y": "~6.0.3",
    "eslint-plugin-react": "~7.5.1",
    "extract-text-webpack-plugin": "~3.0.2",
    "file-loader": "~1.1.6",
    "find-imports": "~0.5.2",
    "html-webpack-plugin": "~2.30.1",
    "http-server": "~0.10.0",
    "jsdom": "~11.5.1",
    "nib": "~1.1.2",
    "react": "~16.2.0",
    "react-dom": "~16.2.0",
    "style-loader": "~0.19.1",
    "styled-components": "~2.3.3",
    "stylint": "~1.5.9",
    "stylint-loader": "~1.0.0",
    "stylus-loader": "~3.0.1",
    "tap": "~11.0.1",
    "trendmicro-ui": "~0.5.0",
    "url-loader": "~0.6.2",
    "webpack": "~3.10.0",
    "webpack-dev-server": "~2.9.7"
  },
  "files": [
    "dist",
    "lib"
  ],
  "homepage": "https://github.com/trendmicro-frontend/react-sidenav",
  "keywords": [
    "react",
    "react-sidenav",
    "sidenav"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "name": "@trendmicro/react-sidenav",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^0.14.0 || >=15.0.0"
  },
  "readme": "# react-sidenav [![build status](https://travis-ci.org/trendmicro-frontend/react-sidenav.svg?branch=master)](https://travis-ci.org/trendmicro-frontend/react-sidenav) [![Coverage Status](https://coveralls.io/repos/github/trendmicro-frontend/react-sidenav/badge.svg?branch=master)](https://coveralls.io/github/trendmicro-frontend/react-sidenav?branch=master)\n\n[![NPM](https://nodei.co/npm/@trendmicro/react-sidenav.png?downloads=true&stars=true)](https://nodei.co/npm/@trendmicro/react-sidenav/)\n\nReact SideNav\n\nDemo: https://trendmicro-frontend.github.io/react-sidenav\n\n## Installation\n\n1. Install the latest version of [react](https://github.com/facebook/react) and [react-sidenav](https://github.com/trendmicro-frontend/react-sidenav):\n\n  ```\n  npm install --save react @trendmicro/react-sidenav\n  ```\n\n2. At this point you can import `@trendmicro/react-sidenav` and its styles in your application as follows:\n\n  ```js\n  import SideNav, { Toggle, Nav, NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\n\n  // Be sure to include styles at some point, probably during your bootstraping\n  import '@trendmicro/react-sidenav/dist/react-sidenav.css';\n  ```\n\n## Usage\n\n```jsx\n<SideNav\n    onSelect={(selected) => {\n        // Add your code here\n    }}\n>\n    <SideNav.Toggle />\n    <SideNav.Nav defaultSelected=\"home\">\n        <NavItem eventKey=\"home\">\n            <NavIcon>\n                <i className=\"fa fa-fw fa-home\" style={{ fontSize: '1.75em' }} />\n            </NavIcon>\n            <NavText>\n                Home\n            </NavText>\n        </NavItem>\n        <NavItem eventKey=\"charts\">\n            <NavIcon>\n                <i className=\"fa fa-fw fa-line-chart\" style={{ fontSize: '1.75em' }} />\n            </NavIcon>\n            <NavText>\n                Charts\n            </NavText>\n            <NavItem eventKey=\"charts/linechart\">\n                <NavText>\n                    Line Chart\n                </NavText>\n            </NavItem>\n            <NavItem eventKey=\"charts/barchart\">\n                <NavText>\n                    Bar Chart\n                </NavText>\n            </NavItem>\n        </NavItem>\n    </SideNav.Nav>\n</SideNav>\n```\n\n## React Router v4 with React v16\n\n```jsx\n<Router>\n    <Route render={({ location, history }) => (\n        <React.Fragment>\n            <SideNav\n                onSelect={(selected) => {\n                    const to = '/' + selected;\n                    if (location.pathname !== to) {\n                        history.push(to);\n                    }\n                }}\n            >\n                <SideNav.Toggle />\n                <SideNav.Nav defaultSelected=\"home\">\n                    <NavItem eventKey=\"home\">\n                        <NavIcon>\n                            <i className=\"fa fa-fw fa-home\" style={{ fontSize: '1.75em' }} />\n                        </NavIcon>\n                        <NavText>\n                            Home\n                        </NavText>\n                    </NavItem>\n                    <NavItem eventKey=\"devices\">\n                        <NavIcon>\n                            <i className=\"fa fa-fw fa-device\" style={{ fontSize: '1.75em' }} />\n                        </NavIcon>\n                        <NavText>\n                            Devices\n                        </NavText>\n                    </NavItem>\n                </SideNav.Nav>\n            </SideNav>\n            <main>\n                <Route path=\"/\" exact component={props => <RootComponent />} />\n                <Route path=\"/home\" component={props => <Home />} />\n                <Route path=\"/devices\" component={props => <Devices />} />\n            </main>\n        </React.Fragment>\n    )}\n    />\n</Router>\n```\n\n## API\n\n### Properties\n\n#### SideNav\n\nName | Type | Default | Description \n:--- | :--- | :------ | :----------\ncomponentClass | element | 'nav' | A custom element for this component.\ndisabled | boolean | | Whether the navigation toggle is disabled.\nexpanded | boolean | | Whether the side navigation is expanded or collapsed.\nonToggle | function(boolean) | | Callback fired when toggling the side navigation between expanded and collapsed state.\nonSelect | function(eventKey, event) | | Callback fired when a navigation item is selected.\n\n#### Toggle\n\nName | Type | Default | Description \n:--- | :--- | :------ | :----------\ncomponentClass | element | 'button' | A custom element for this component.\ndisabled | boolean | false | Whether the navigation toggle is disabled.\nexpanded | boolean | false | Whether the side navigation is expanded or collapsed.\n\n#### Nav\n\nName | Type | Default | Description \n:--- | :--- | :------ | :----------\ncomponentClass | element | 'div' | A custom element for this component.\nonSelect | function(eventKey, event) | | Callback fired when a navigation item is selected.\nselected | any | | The selected navigation item.\ndefaultSelected | any | | The initially selected navigation item.\nexpanded | boolean | false | Whether the side navigation is expanded or collapsed.\n\n#### NavItem\n\nName | Type | Default | Description \n:--- | :--- | :------ | :----------\ncomponentClass | element | 'div' | A custom element for this component.\nactive | boolean | false | Highlight the navigation item as active.\ndisabled | boolean | false | Disable the navigation item, making it unselectable.\nexpanded | boolean | false | Whether the navigation item is expanded or collapsed.\neventKey | any | _(required)_ | Value passed to the `onSelect` handler, useful for identifying the selected navigation item.\nonClick | function(event) | | Callback fired when the navigation item is clicked.\nonSelect | function(eventKey, event) | | Callback fired when a navigation item is selected.\nnavitemClassName | | |\nnavitemStyle | | |\nsubnavClassName | | |\nsubnavStyle | | |\n\n#### NavIcon\n\nName | Type | Default | Description \n:--- | :--- | :------ | :----------\nchildren | any | |\n\n#### NavText\n\nName | Type | Default | Description \n:--- | :--- | :------ | :----------\nchildren | any | |\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/trendmicro-frontend/react-sidenav.git"
  },
  "scripts": {
    "build": "webpack && npm run cleancss",
    "build-examples": "cd examples; webpack",
    "clean": "rm -f {lib,dist}/*",
    "cleancss": "cleancss -o dist/react-sidenav.min.css dist/react-sidenav.css",
    "coveralls": "tap test/*.js --coverage --coverage-report=text-lcov --nyc-arg=--require --nyc-arg=babel-register --nyc-arg=--require --nyc-arg=babel-polyfill | coveralls",
    "demo": "http-server -p 8000 docs/",
    "dev": "cd examples; webpack-dev-server --hot --inline --host 0.0.0.0 --port 8000 --content-base ../docs",
    "lint": "eslint ./src ./test",
    "prepublish": "npm run lint && npm test && npm run clean && npm run build && npm run build-examples",
    "test": "tap test/*.js --node-arg=--require --node-arg=babel-register --node-arg=--require --node-arg=babel-polyfill"
  },
  "version": "0.4.5"
}
